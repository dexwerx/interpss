/**
 * <copyright>
 * 	Copyright www.interpss.com 2005
 * </copyright>
 * 
 * A JPanel for editing the model's data. It implements the IControllerEditor interface, which will be called from
 * the parent editor dialog.
 * 
 * @author  mzhou
 */

package com.interpss.dstab.control.exc.psat.psatType3;

import java.util.Vector;

import com.interpss.common.ui.IControllerEditor;
import com.interpss.common.ui.VerifyUtil;
import com.interpss.common.util.Num2Str;
import com.interpss.dstab.control.common.ui.InputVerifyUtil;

public class NBType3_psatAvrEditPanel extends javax.swing.JPanel implements IControllerEditor {
	private static final long serialVersionUID = 1;

	// define data to be edited
	Type3_psatAvrData _data;

    /** Creates new form FaultLocDataPanel */
    public NBType3_psatAvrEditPanel() {
        initComponents();

        // associate the editing fields with the verifier class defined at the end of this calss
  		DataVerifier verifier = new DataVerifier();
  	    mu0TextField.setInputVerifier(verifier);
  	    t1TextField.setInputVerifier(verifier);
  	    t2TextField.setInputVerifier(verifier);
  	    trTextField.setInputVerifier(verifier);
  	    v0TextField.setInputVerifier(verifier);
  	    vf0TextField.setInputVerifier(verifier);
  	    vfmaxTextField.setInputVerifier(verifier);
  	    vfminTextField.setInputVerifier(verifier);
    }
    
    /**
     * Init the editor panel, which will be called from its parent editor
     */
	public void init(Object controller) {
		// init the data object from the bus object being edited
		_data = ((Type3_psatAvr)controller).getData();
	}
	
	/**
	*	Set controller data to the editor
	*
	* @return false if there is any problem
	*/
    public boolean setData2Editor() {
  	    vfmaxTextField.setText(Num2Str.toStr(_data.getVfmax(), "#0.00"));
  	    vfminTextField.setText(Num2Str.toStr(_data.getVfmin(), "#0.00"));
  	    mu0TextField.setText(Num2Str.toStr(_data.getMu0(), "#0.00"));
  	    t1TextField.setText(Num2Str.toStr(_data.getT1(), "#0.000"));
  	    t2TextField.setText(Num2Str.toStr(_data.getT2(), "#0.000"));
  	    trTextField.setText(Num2Str.toStr(_data.getTr(), "#0.000"));
  	    v0TextField.setText(Num2Str.toStr(_data.getV0(), "#0.000"));
  	    vf0TextField.setText(Num2Str.toStr(_data.getVf0(), "#0.000"));
        return true;
	}
    
	/**
	*	Save editor screen data to the controller data object
	*
	* @param errMsg error messages during the saving process.
	* @return false if there is any problem
	*/
    public boolean saveEditorData(Vector errMsg) throws Exception {
		boolean ok = true;

  	    if (!VerifyUtil.largeThan(this.vfmaxTextField, 0.0d)) {
			errMsg.add("Vfmax <= 0.0");
			ok = false;
		}
    	_data.setVfmax(InputVerifyUtil.getDouble(vfmaxTextField));

    	if (!VerifyUtil.largeEqualThan(this.vfminTextField, 0.0d)) {
			errMsg.add("Vfmin < 0.0");
			ok = false;
		}
    	_data.setVfmin(InputVerifyUtil.getDouble(vfminTextField));
		
    	if (_data.getVfmax() <= _data.getVfmin()) {
			errMsg.add("Vrmax <= Vrmin");
			ok = false;
		}

		if (!VerifyUtil.largeThan(this.mu0TextField, 0.0d)) {
			errMsg.add("mu0 <= 0.0");
			ok = false;
		}
    	_data.setMu0(InputVerifyUtil.getDouble(mu0TextField));

		if (!VerifyUtil.largeThan(this.t1TextField, 0.0d)) {
			errMsg.add("T1 <= 0.0");
			ok = false;
		}
    	_data.setT1(InputVerifyUtil.getDouble(t1TextField));

		if (!VerifyUtil.largeThan(this.t2TextField, 0.0d)) {
			errMsg.add("T2 <= 0.0");
			ok = false;
		}
    	_data.setT2(InputVerifyUtil.getDouble(t2TextField));

		if (!VerifyUtil.largeThan(this.trTextField, 0.0d)) {
			errMsg.add("Tr <= 0.0");
			ok = false;
		}
    	_data.setTr(InputVerifyUtil.getDouble(trTextField));

		if (!VerifyUtil.largeThan(this.v0TextField, 0.0d)) {
			errMsg.add("V0 <= 0.0");
			ok = false;
		}
    	_data.setV0(InputVerifyUtil.getDouble(v0TextField));
    	
		if (!VerifyUtil.largeThan(this.vf0TextField, 0.0d)) {
			errMsg.add("Vf0 <= 0.0");
			ok = false;
		}
    	_data.setVf0(InputVerifyUtil.getDouble(vf0TextField));

    	return ok;
	}
    
	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        vfmaxLabel = new javax.swing.JLabel();
        vfmaxTextField = new javax.swing.JTextField();
        vfminLabel = new javax.swing.JLabel();
        vfminTextField = new javax.swing.JTextField();
        mu0Label = new javax.swing.JLabel();
        mu0TextField = new javax.swing.JTextField();
        t2Label = new javax.swing.JLabel();
        t2TextField = new javax.swing.JTextField();
        t1Label = new javax.swing.JLabel();
        t1TextField = new javax.swing.JTextField();
        vf0Label = new javax.swing.JLabel();
        vf0TextField = new javax.swing.JTextField();
        v0Label = new javax.swing.JLabel();
        v0TextField = new javax.swing.JTextField();
        trLabel = new javax.swing.JLabel();
        trTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        vfmaxLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        vfmaxLabel.setText("Vfmax(pu)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(vfmaxLabel, gridBagConstraints);

        vfmaxTextField.setColumns(5);
        vfmaxTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        vfmaxTextField.setText("10.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(vfmaxTextField, gridBagConstraints);

        vfminLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        vfminLabel.setText("Vfmin(pu)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(vfminLabel, gridBagConstraints);

        vfminTextField.setColumns(5);
        vfminTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        vfminTextField.setText("-10.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(vfminTextField, gridBagConstraints);

        mu0Label.setFont(new java.awt.Font("Dialog", 0, 12));
        mu0Label.setText("Mu0(pu)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(mu0Label, gridBagConstraints);

        mu0TextField.setColumns(5);
        mu0TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        mu0TextField.setText("20.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(mu0TextField, gridBagConstraints);

        t2Label.setFont(new java.awt.Font("Dialog", 0, 12));
        t2Label.setText("T2(s)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(t2Label, gridBagConstraints);

        t2TextField.setColumns(5);
        t2TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        t2TextField.setText("0.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(t2TextField, gridBagConstraints);

        t1Label.setFont(new java.awt.Font("Dialog", 0, 12));
        t1Label.setText("T1(s)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(t1Label, gridBagConstraints);

        t1TextField.setColumns(5);
        t1TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        t1TextField.setText("0.05");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(t1TextField, gridBagConstraints);

        vf0Label.setFont(new java.awt.Font("Dialog", 0, 12));
        vf0Label.setText("Vf0(pu)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(vf0Label, gridBagConstraints);

        vf0TextField.setColumns(5);
        vf0TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        vf0TextField.setText("1.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(vf0TextField, gridBagConstraints);

        v0Label.setFont(new java.awt.Font("Dialog", 0, 12));
        v0Label.setText("V0(pu)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(v0Label, gridBagConstraints);

        v0TextField.setColumns(5);
        v0TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        v0TextField.setText("1.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(v0TextField, gridBagConstraints);

        trLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        trLabel.setText("Tr(s)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(trLabel, gridBagConstraints);

        trTextField.setColumns(5);
        trTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        trTextField.setText("0.05");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(trTextField, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel mu0Label;
    private javax.swing.JTextField mu0TextField;
    private javax.swing.JLabel t1Label;
    private javax.swing.JTextField t1TextField;
    private javax.swing.JLabel t2Label;
    private javax.swing.JTextField t2TextField;
    private javax.swing.JLabel trLabel;
    private javax.swing.JTextField trTextField;
    private javax.swing.JLabel v0Label;
    private javax.swing.JTextField v0TextField;
    private javax.swing.JLabel vf0Label;
    private javax.swing.JTextField vf0TextField;
    private javax.swing.JLabel vfmaxLabel;
    private javax.swing.JTextField vfmaxTextField;
    private javax.swing.JLabel vfminLabel;
    private javax.swing.JTextField vfminTextField;
    // End of variables declaration//GEN-END:variables

    // define data validation rules
	class DataVerifier extends javax.swing.InputVerifier {
    	public boolean verify(javax.swing.JComponent input) {
			if (input == null)
				return false;
       		try {
       			// data field verification rules
    			if ( input == mu0TextField ||
    	    		 input == t1TextField ||
             		 input == t2TextField ||
             		 input == trTextField ||
             		 input == v0TextField ||
             		 input == vf0TextField ||
             		 input == vfmaxTextField ||
             		 input == vfminTextField )
    	       		return InputVerifyUtil.getDouble((javax.swing.JTextField)input) >= 0.0;
 	       	} catch (Exception e) {
 	    		return false;
 	       	}		
			return true;
        }
    }
}
