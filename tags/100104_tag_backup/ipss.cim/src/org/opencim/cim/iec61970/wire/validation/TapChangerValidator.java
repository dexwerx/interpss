/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.opencim.cim.iec61970.wire.validation;

import org.opencim.cim.iec61970.domain.TransformerControlMode;

import org.opencim.cim.iec61970.wire.RegulationSchedule;

import org.opencim.datatype.integer.TapStep;

import org.opencim.datatype.real.AngleDegrees;
import org.opencim.datatype.real.PerCent;
import org.opencim.datatype.real.Seconds;
import org.opencim.datatype.real.Voltage;

/**
 * A sample validator interface for {@link org.opencim.cim.iec61970.wire.TapChanger}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface TapChangerValidator {
	boolean validate();

	boolean validateHighStep(TapStep value);
	boolean validateInitialDelay(Seconds value);
	boolean validateLowStep(TapStep value);
	boolean validateNeutralKV(Voltage value);
	boolean validateNeutralStep(TapStep value);
	boolean validateNormalStep(TapStep value);
	boolean validateStepPhaseShiftIncrement(AngleDegrees value);
	boolean validateStepVoltageIncrement(PerCent value);
	boolean validateSubsequentDelay(Seconds value);
	boolean validateTculControlMode(TransformerControlMode value);
	boolean validateRegulationSchedule(RegulationSchedule value);
}
