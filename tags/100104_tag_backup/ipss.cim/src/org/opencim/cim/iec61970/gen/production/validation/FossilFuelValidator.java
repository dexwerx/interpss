/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.opencim.cim.iec61970.gen.production.validation;

import org.eclipse.emf.common.util.EList;

import org.opencim.cim.iec61970.domain.FuelType;

import org.opencim.cim.iec61970.gen.production.ThermalGeneratingUnit;

import org.opencim.datatype.real.ActivePower;
import org.opencim.datatype.real.CostPerHeatUnit;
import org.opencim.datatype.real.PU;
import org.opencim.datatype.real.PerCent;

/**
 * A sample validator interface for {@link org.opencim.cim.iec61970.gen.production.FossilFuel}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface FossilFuelValidator {
	boolean validate();

	boolean validateFossilFuelType(FuelType value);
	boolean validateFuelCost(CostPerHeatUnit value);
	boolean validateFuelDispatchCost(CostPerHeatUnit value);
	boolean validateFuelEffFactor(PU value);
	boolean validateFuelHandlingCost(CostPerHeatUnit value);
	boolean validateFuelHeatContent(Float value);
	boolean validateFuelMixture(PerCent value);
	boolean validateFuelSulfur(PU value);
	boolean validateHighMWBreakpoint(ActivePower value);
	boolean validateLowMWBreakpoint(ActivePower value);
	boolean validateFuelAllocationSchedule(EList value);
	boolean validateThermalGeneratingUnit(ThermalGeneratingUnit value);
}
