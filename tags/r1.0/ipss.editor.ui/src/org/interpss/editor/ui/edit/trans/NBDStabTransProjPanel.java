 /*
  * @(#)NBDStabTransProjPanel.java   
  *
  * Copyright (C) 2006 www.interpss.org
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE
  * as published by the Free Software Foundation; either version 2.1
  * of the License, or (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * @Author Mike Zhou
  * @Version 1.0
  * @Date 09/15/2006
  * 
  *   Revision History
  *   ================
  *
  */

package org.interpss.editor.ui.edit.trans;
  
import java.util.Vector;

import org.interpss.editor.data.dstab.DStabNetData;
import org.interpss.editor.form.GFormContainer;
import org.interpss.editor.form.GNetForm;
import org.interpss.editor.jgraph.ui.edit.IFormDataPanel;
import org.interpss.editor.jgraph.ui.form.IGNetForm;

public class NBDStabTransProjPanel extends javax.swing.JPanel implements IFormDataPanel {
	private static final long serialVersionUID = 1;

	private GFormContainer _netContainer = null;

	public void initPanel() {
	}
    
	public void init(Object netContainer, Object form) {
		_netContainer = (GFormContainer)netContainer;
		allowParalellBranchCheckBox.setSelected(false);
		allowParalellBranchCheckBox.setEnabled(false);
	}
	
    public boolean setForm2Editor() {
		GNetForm form = (GNetForm)_netContainer.getGNetForm();
		
		adjustmentCheckBox.setSelected(form.getAcscNetData().isHasAdjustment());
    	return true;
	}
    
    public boolean saveEditor2Form(Vector errMsg) {
		GNetForm form = (GNetForm)_netContainer.getGNetForm();
		DStabNetData data = form.getDStabNetData();

		form.setNetType(IGNetForm.NetType_DStabilityNet);

		form.setAllowParallelBranch(allowParalellBranchCheckBox.isSelected());
		
		if (adjustmentCheckBox.isSelected()) {
			data.getAcscNetData().setHasAdjustment(true);
		}
		return true;
    }
    
    /** Creates new form AclfEditPanel */
    public NBDStabTransProjPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        allowParalellBranchCheckBox = new javax.swing.JCheckBox();
        adjustmentCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridLayout(2, 1));

        allowParalellBranchCheckBox.setFont(new java.awt.Font("Dialog", 0, 12));
        allowParalellBranchCheckBox.setSelected(true);
        allowParalellBranchCheckBox.setText("Allow paralell branches");
        allowParalellBranchCheckBox.setName("allowParalellBranchCheckBox");
        add(allowParalellBranchCheckBox);

        adjustmentCheckBox.setFont(new java.awt.Font("Dialog", 0, 12));
        adjustmentCheckBox.setSelected(true);
        adjustmentCheckBox.setText("Include adjustments/Controls");
        adjustmentCheckBox.setName("adjustmentCheckBox");
        add(adjustmentCheckBox);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox adjustmentCheckBox;
    private javax.swing.JCheckBox allowParalellBranchCheckBox;
    // End of variables declaration//GEN-END:variables
    
}
