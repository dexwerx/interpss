 /*
  * @(#)NBIEEE_DC1AExciterEditPanel.java   
  *
  * Copyright (C) 2006 www.interpss.org
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE
  * as published by the Free Software Foundation; either version 2.1
  * of the License, or (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * @Author Mike Zhou
  * @Version 1.0
  * @Date 09/15/2006
  * 
  *   Revision History
  *   ================
  *
  */

package org.interpss.dstab.control.exc.ieee.ieeeDC1A;

import java.util.Vector;

import com.interpss.common.ui.IControllerEditor;
import com.interpss.common.ui.SwingInputVerifyUtil;
import com.interpss.common.util.Num2Str;

public class NBIEEE_DC1AExciterEditPanel extends javax.swing.JPanel implements IControllerEditor {
	private static final long serialVersionUID = 1;
	
	IEEE_DC1AExciterData _data;

    /** Creates new form FaultLocDataPanel */
    public NBIEEE_DC1AExciterEditPanel() {
        initComponents();

        // associate the editing fields with the verifier class defined at the end of this calss
  		DataVerifier verifier = new DataVerifier();
  	    kaTextField.setInputVerifier(verifier);
  	    taTextField.setInputVerifier(verifier);
  	    tbTextField.setInputVerifier(verifier);
  	    tcTextField.setInputVerifier(verifier);
  	    teTextField.setInputVerifier(verifier);
  	    tfTextField.setInputVerifier(verifier);
  	    kfTextField.setInputVerifier(verifier);
  	    seEfd1TextField.setInputVerifier(verifier);
  	    seEfd2TextField.setInputVerifier(verifier);
  	    efd1TextField.setInputVerifier(verifier);
  	    efd2TextField.setInputVerifier(verifier);
  	    vrmaxTextField.setInputVerifier(verifier);
  	    vrminTextField.setInputVerifier(verifier);
    }
    
	public void init(Object controller) {
		// init the data object from the bus object being edited
		_data = ((IEEE_DC1AExciter)controller).getData();
	}
	
	/**
	*	Set form data to the editor
	*
	* @return false if there is any problem
	*/
    public boolean setData2Editor() {
  	    kaTextField.setText(Num2Str.toStr(_data.getKa(), "#0.00"));
  	    taTextField.setText(Num2Str.toStr(_data.getTa(), "#0.000"));
  	    tbTextField.setText(Num2Str.toStr(_data.getTb(), "#0.000"));
  	    tcTextField.setText(Num2Str.toStr(_data.getTc(), "#0.000"));
  	    teTextField.setText(Num2Str.toStr(_data.getTe(), "#0.000"));
  	    tfTextField.setText(Num2Str.toStr(_data.getTf(), "#0.000"));
  	    kfTextField.setText(Num2Str.toStr(_data.getKf(), "#0.000"));
  	    seEfd1TextField.setText(Num2Str.toStr(_data.getSe_Efd1(), "#0.000"));
  	    seEfd2TextField.setText(Num2Str.toStr(_data.getSe_Efd2(), "#0.000"));
  	    efd1TextField.setText(Num2Str.toStr(_data.getEfd1(), "#0.000"));
  	    efd2TextField.setText(Num2Str.toStr(_data.getEfd2(), "#0.000"));
  	    vrmaxTextField.setText(Num2Str.toStr(_data.getVrmax(), "#0.00"));
  	    vrminTextField.setText(Num2Str.toStr(_data.getVrmin(), "#0.00"));

        return true;
	}
    
	/**
	*	Save editor screen data to the form
	*
	* @param errMsg error messages during the saving process.
	* @return false if there is any problem
	*/
    public boolean saveEditorData(Vector errMsg) throws Exception {
		boolean ok = true;
		// TODO: add verification rules
    	_data.setKa(SwingInputVerifyUtil.getDouble(kaTextField));
    	_data.setTa(SwingInputVerifyUtil.getDouble(taTextField));
    	_data.setTb(SwingInputVerifyUtil.getDouble(tbTextField));
    	_data.setTc(SwingInputVerifyUtil.getDouble(tcTextField));
    	_data.setTe(SwingInputVerifyUtil.getDouble(teTextField));
    	_data.setTf(SwingInputVerifyUtil.getDouble(tfTextField));
    	_data.setKf(SwingInputVerifyUtil.getDouble(kfTextField));
    	_data.setSe_Efd1(SwingInputVerifyUtil.getDouble(seEfd1TextField));
    	_data.setSe_Efd2(SwingInputVerifyUtil.getDouble(seEfd2TextField));
    	_data.setEfd1(SwingInputVerifyUtil.getDouble(efd1TextField));
    	_data.setEfd2(SwingInputVerifyUtil.getDouble(efd2TextField));
    	_data.setVrmax(SwingInputVerifyUtil.getDouble(vrmaxTextField));
    	_data.setVrmin(SwingInputVerifyUtil.getDouble(vrminTextField));
		
		return ok;
	}
    
	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        kaLabel = new javax.swing.JLabel();
        kaTextField = new javax.swing.JTextField();
        taLabel = new javax.swing.JLabel();
        taTextField = new javax.swing.JTextField();
        tbLabel = new javax.swing.JLabel();
        tbTextField = new javax.swing.JTextField();
        tcLabel = new javax.swing.JLabel();
        tcTextField = new javax.swing.JTextField();
        teLabel = new javax.swing.JLabel();
        teTextField = new javax.swing.JTextField();
        kfLabel = new javax.swing.JLabel();
        kfTextField = new javax.swing.JTextField();
        tfLabel = new javax.swing.JLabel();
        tfTextField = new javax.swing.JTextField();
        seEfd1Label = new javax.swing.JLabel();
        seEfd1TextField = new javax.swing.JTextField();
        seEfd2Label = new javax.swing.JLabel();
        seEfd2TextField = new javax.swing.JTextField();
        efd1Label = new javax.swing.JLabel();
        efd1TextField = new javax.swing.JTextField();
        efd2Label = new javax.swing.JLabel();
        efd2TextField = new javax.swing.JTextField();
        vrmaxLabel = new javax.swing.JLabel();
        vrmaxTextField = new javax.swing.JTextField();
        vrminLabel = new javax.swing.JLabel();
        vrminTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        kaLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        kaLabel.setText("Ka");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(kaLabel, gridBagConstraints);

        kaTextField.setColumns(5);
        kaTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        kaTextField.setText("46.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(kaTextField, gridBagConstraints);

        taLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        taLabel.setText("Ta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(taLabel, gridBagConstraints);

        taTextField.setColumns(5);
        taTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        taTextField.setText("0.06");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(taTextField, gridBagConstraints);

        tbLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        tbLabel.setText("Tb");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(tbLabel, gridBagConstraints);

        tbTextField.setColumns(5);
        tbTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        tbTextField.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(tbTextField, gridBagConstraints);

        tcLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        tcLabel.setText("Tc");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(tcLabel, gridBagConstraints);

        tcTextField.setColumns(5);
        tcTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        tcTextField.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(tcTextField, gridBagConstraints);

        teLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        teLabel.setText("Te");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(teLabel, gridBagConstraints);

        teTextField.setColumns(5);
        teTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        teTextField.setText("0.46");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(teTextField, gridBagConstraints);

        kfLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        kfLabel.setText("Kf");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(kfLabel, gridBagConstraints);

        kfTextField.setColumns(5);
        kfTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        kfTextField.setText("0.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(kfTextField, gridBagConstraints);

        tfLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        tfLabel.setText("Tf");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(tfLabel, gridBagConstraints);

        tfTextField.setColumns(5);
        tfTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        tfTextField.setText("1.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(tfTextField, gridBagConstraints);

        seEfd1Label.setFont(new java.awt.Font("Dialog", 0, 12));
        seEfd1Label.setText("Se_Efd1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(seEfd1Label, gridBagConstraints);

        seEfd1TextField.setColumns(5);
        seEfd1TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        seEfd1TextField.setText("0.33");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(seEfd1TextField, gridBagConstraints);

        seEfd2Label.setFont(new java.awt.Font("Dialog", 0, 12));
        seEfd2Label.setText("Se_Efd2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(seEfd2Label, gridBagConstraints);

        seEfd2TextField.setColumns(5);
        seEfd2TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        seEfd2TextField.setText("0.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(seEfd2TextField, gridBagConstraints);

        efd1Label.setFont(new java.awt.Font("Dialog", 0, 12));
        efd1Label.setText("Efd1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(efd1Label, gridBagConstraints);

        efd1TextField.setColumns(5);
        efd1TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        efd1TextField.setText("3.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(efd1TextField, gridBagConstraints);

        efd2Label.setFont(new java.awt.Font("Dialog", 0, 12));
        efd2Label.setText("Efd2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(efd2Label, gridBagConstraints);

        efd2TextField.setColumns(5);
        efd2TextField.setFont(new java.awt.Font("Dialog", 0, 12));
        efd2TextField.setText("2.3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(efd2TextField, gridBagConstraints);

        vrmaxLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        vrmaxLabel.setText("Vrmax");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 50, 5, 20);
        add(vrmaxLabel, gridBagConstraints);

        vrmaxTextField.setColumns(5);
        vrmaxTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        vrmaxTextField.setText("1.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(vrmaxTextField, gridBagConstraints);

        vrminLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        vrminLabel.setText("Vrmin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 20);
        add(vrminLabel, gridBagConstraints);

        vrminTextField.setColumns(5);
        vrminTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        vrminTextField.setText("-0.9");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(vrminTextField, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel efd1Label;
    private javax.swing.JTextField efd1TextField;
    private javax.swing.JLabel efd2Label;
    private javax.swing.JTextField efd2TextField;
    private javax.swing.JLabel kaLabel;
    private javax.swing.JTextField kaTextField;
    private javax.swing.JLabel kfLabel;
    private javax.swing.JTextField kfTextField;
    private javax.swing.JLabel seEfd1Label;
    private javax.swing.JTextField seEfd1TextField;
    private javax.swing.JLabel seEfd2Label;
    private javax.swing.JTextField seEfd2TextField;
    private javax.swing.JLabel taLabel;
    private javax.swing.JTextField taTextField;
    private javax.swing.JLabel tbLabel;
    private javax.swing.JTextField tbTextField;
    private javax.swing.JLabel tcLabel;
    private javax.swing.JTextField tcTextField;
    private javax.swing.JLabel teLabel;
    private javax.swing.JTextField teTextField;
    private javax.swing.JLabel tfLabel;
    private javax.swing.JTextField tfTextField;
    private javax.swing.JLabel vrmaxLabel;
    private javax.swing.JTextField vrmaxTextField;
    private javax.swing.JLabel vrminLabel;
    private javax.swing.JTextField vrminTextField;
    // End of variables declaration//GEN-END:variables

	class DataVerifier extends javax.swing.InputVerifier {
    	public boolean verify(javax.swing.JComponent input) {
			if (input == null)
				return false;
       		try {
       			// data field verification rules
    			if ( input == kaTextField ||
             		 input == taTextField ||
             		 input == tbTextField ||
             		 input == tcTextField ||
             		 input == teTextField ||
             		 input == tfTextField || 
             		 input == kfTextField ||
             		 input == seEfd1TextField || 
             		 input == seEfd2TextField ||
             		 input == efd1TextField ||
             		 input == efd2TextField ||
             		 input == vrmaxTextField ||
             		 input == vrminTextField )
    	       		return SwingInputVerifyUtil.getDouble((javax.swing.JTextField)input) >= 0.0;
 	       	} catch (Exception e) {
 	    		return false;
 	       	}		
			return true;
        }
    }
}
