package org.interpss.editor.ui.edit.trans;
  
/**
 *
 */
import java.util.Vector;

import org.interpss.editor.data.aclf.AclfNetData;
import org.interpss.editor.form.GFormContainer;
import org.interpss.editor.form.GNetForm;
import org.interpss.editor.jgraph.ui.edit.IFormDataPanel;
import org.interpss.editor.jgraph.ui.form.IGNetForm;

 
 
public class NBAclfTransProjPanel extends javax.swing.JPanel implements IFormDataPanel {
	private static final long serialVersionUID = 1;

	private GFormContainer _netContainer = null;

	public void initPanel() {
	}
    
	public void init(Object netContainer, Object form) {
		_netContainer = (GFormContainer)netContainer;
	}
	
    public boolean setForm2Editor() {
		GNetForm form = (GNetForm)_netContainer.getGNetForm();

		// this function is not needed for the GEditor
		allowParalellBranchCheckBox.setEnabled(false);
		allowParalellBranchCheckBox.setSelected(false);
		//allowParalellBranchCheckBox.setSelected(form.isAllowParallelBranch());
		
		adjustmentCheckBox.setSelected(form.getNetType().equals(IGNetForm.NetType_AclfAdjNetwork));
		
    	return true;
	}
    
    public boolean saveEditor2Form(Vector errMsg) {
		GNetForm form = (GNetForm)_netContainer.getGNetForm();
		AclfNetData data = form.getAcscNetData();

		form.setAllowParallelBranch(allowParalellBranchCheckBox.isSelected());
		
		if (adjustmentCheckBox.isSelected()) {
			form.setNetType(IGNetForm.NetType_AclfAdjNetwork);
			data.setHasAdjustment(true);
		}
		else {
			form.setNetType(IGNetForm.NetType_AclfNetwork);
			data.setHasAdjustment(false);
		}
		return true;
    }
    
    /** Creates new form AclfEditPanel */
    public NBAclfTransProjPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        allowParalellBranchCheckBox = new javax.swing.JCheckBox();
        adjustmentCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridLayout(2, 1));

        allowParalellBranchCheckBox.setFont(new java.awt.Font("Dialog", 0, 12));
        allowParalellBranchCheckBox.setSelected(true);
        allowParalellBranchCheckBox.setText("Allow paralell branches");
        allowParalellBranchCheckBox.setName("allowParalellBranchCheckBox");
        add(allowParalellBranchCheckBox);

        adjustmentCheckBox.setFont(new java.awt.Font("Dialog", 0, 12));
        adjustmentCheckBox.setSelected(true);
        adjustmentCheckBox.setText("Include adjustments/Controls");
        adjustmentCheckBox.setName("adjustmentCheckBox");
        add(adjustmentCheckBox);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox adjustmentCheckBox;
    private javax.swing.JCheckBox allowParalellBranchCheckBox;
    // End of variables declaration//GEN-END:variables
    
}
