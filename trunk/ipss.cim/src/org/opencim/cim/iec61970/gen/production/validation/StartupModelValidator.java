/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.opencim.cim.iec61970.gen.production.validation;

import java.util.Date;

import org.opencim.cim.iec61970.gen.production.StartIgnFuelCurve;
import org.opencim.cim.iec61970.gen.production.StartMainFuelCurve;
import org.opencim.cim.iec61970.gen.production.StartRampCurve;

import org.opencim.datatype.integer.Priority;

import org.opencim.datatype.real.ActivePower;
import org.opencim.datatype.real.CostPerEnergyUnit;
import org.opencim.datatype.real.CostPerHour;
import org.opencim.datatype.real.HeatPerHour;
import org.opencim.datatype.real.Hours;
import org.opencim.datatype.real.Money;

/**
 * A sample validator interface for {@link org.opencim.cim.iec61970.gen.production.StartupModel}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface StartupModelValidator {
	boolean validate();

	boolean validateFixedMaintCost(CostPerHour value);
	boolean validateHotStandbyHeat(HeatPerHour value);
	boolean validateIncrementalMaintCost(CostPerEnergyUnit value);
	boolean validateMinimumDownTime(Hours value);
	boolean validateMinimumRunTime(Hours value);
	boolean validateRiskFactorCost(Money value);
	boolean validateStartupCost(Money value);
	boolean validateStartupDate(Date value);
	boolean validateStartupPriority(Priority value);
	boolean validateStbyAuxPowerMW(ActivePower value);
	boolean validateStartIgnFuelCurve(StartIgnFuelCurve value);
	boolean validateStartMainFuelCurve(StartMainFuelCurve value);
	boolean validateStartRampCurve(StartRampCurve value);
}
