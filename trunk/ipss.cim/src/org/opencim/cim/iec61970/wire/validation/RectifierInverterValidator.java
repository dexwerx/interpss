/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.opencim.cim.iec61970.wire.validation;

import org.opencim.cim.iec61970.wire.VoltageControlZone;

import org.opencim.datatype.integer.Counter;

import org.opencim.datatype.real.ActivePower;
import org.opencim.datatype.real.Frequency;
import org.opencim.datatype.real.Reactance;
import org.opencim.datatype.real.Resistance;
import org.opencim.datatype.real.Voltage;

import org.opencim.datatype.string.OperatingMode;

/**
 * A sample validator interface for {@link org.opencim.cim.iec61970.wire.RectifierInverter}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface RectifierInverterValidator {
	boolean validate();

	boolean validateRatedKV(Voltage value);
	boolean validateBridges(Counter value);
	boolean validateCommutatingReactance(Reactance value);
	boolean validateCommutatingResistance(Resistance value);
	boolean validateCompoundResistance(Resistance value);
	boolean validateMinCompoundVoltage(Voltage value);
	boolean validateFrequency(Frequency value);
	boolean validateMaximumMW(ActivePower value);
	boolean validateMinimumMW(ActivePower value);
	boolean validateMaximumKV(VoltageControlZone value);
	boolean validateMinimumKV(Voltage value);
	boolean validateOperatingMode(OperatingMode value);
}
